@using HungerGamesSimulator.Data
@inject IMessageCenter MessageCenter;

<div class="main">
  <h3>The 1st Annual Hunger Games</h3>
  <div class="simulationText">
  @if ( !cannon )
  {
      @foreach ( var message in MessageCenter.GetMessages() )
      {
        <p> @message </p>
      }
  }
  else
  {
      <p> @MessageCenter.GetCannonMessages().Count Cannon shot(s) can be heard in the distance </p>
      @foreach ( var message in MessageCenter.GetCannonMessages() )
      {
        <p> @message </p>
      }
  }
  <button @onclick="Simulate"> Continue </button>
  </div>
</div>

@code {
  [Parameter]
  public Simulation? Simulation { get; set; }

  [Parameter]
  public EventCallback<Simulation?> SimulationChanged { get; set; }

  [Parameter]
  public bool Reset { get; set; }

  [Parameter]
  public List<IActor> Tributes { get; set; }

  private bool cannon = false;
  private SimulationService? simulationService;

  protected override async Task OnInitializedAsync()
  {
    if ( Simulation == null || Reset )
    {
      Simulation = new Simulation( Tributes );
      await SimulationChanged.InvokeAsync( Simulation );

      simulationService = new SimulationService( Simulation, MessageCenter );
    }
  }

  private async Task Simulate()
  {
    if (MessageCenter.GetCannonMessages().Count > 0)
    {
      if (cannon)
      {
        cannon = false;
      }
      else
      {
        cannon = true;
        return;
      }
    }

    simulationService?.Act();
    await SimulationChanged.InvokeAsync(Simulation);
  }
}